#!/bin/bash

TEMPLATE_NAME=${TEMPLATE_NAME-template.json}
THIS_PATH="${BASH_SOURCE[0]}"
THIS_DIRS="$( cd "`dirname "${THIS_PATH}"`" && pwd )"
THIS_FILE="${THIS_PATH##*\/}"
THIS_NAME="${THIS_FILE%.*}"
THIS_TYPE="${THIS_FILE##*\.}"
THIS_RELATIVE_PATH="$( cd "`dirname "${THIS_PATH}"`" && pwd )/${THIS_FILE}"

pushd "${THIS_RELATIVE_PATH}" &>/dev/null

if [ -h "$( pwd )" ]; then
 THIS_ABSOLUTE_PATH="$( readlink ${THIS_RELATIVE_PATH} )"
else
 THIS_ABSOLUTE_PATH="${THIS_RELATIVE_PATH}"
fi

popd &>/dev/null

test_packer_validate_usage() {
 printf "Testing 'packer validate' usage...\n"
 packer validate "$(dirname $THIS_ABSOLUTE_PATH)/../${TEMPLATE_NAME}"
}

check_result() {
 local result="$1"
 if [[ "$result" != "0" ]]; then
  printf "Packer template '%s' test FAILED (exit code: %s)\n" "${TEMPLATE_NAME}" "${result}"
  return $result
 fi
}

test_packer_validate_usage

if ! check_result $?; then
 printf "** Source File PATHs **\n" "$(basename "`test -L ${BASH_SOURCE[0]} && readlink ${BASH_SOURCE[0]} || echo ${BASH_SOURCE[0]}`")"
 printf "THIS_PATH \xE2\x9E\xA1 %s\n" "${THIS_PATH}"
 printf "THIS_DIRS \xE2\x9E\xA1 %s\n" "${THIS_DIRS}"
 printf "THIS_FILE \xE2\x9E\xA1 %s\n" "${THIS_FILE}"
 printf "THIS_NAME \xE2\x9E\xA1 %s\n" "${THIS_NAME}"
 printf "THIS_TYPE \xE2\x9E\xA1 %s\n" "${THIS_TYPE}"
 printf "THIS_RELATIVE_PATH \xE2\x9E\xA1 %s\n" "${THIS_RELATIVE_PATH}"
 printf "THIS_ABSOLUTE_PATH \xE2\x9E\xA1 %s\n" "${THIS_ABSOLUTE_PATH}"
fi
